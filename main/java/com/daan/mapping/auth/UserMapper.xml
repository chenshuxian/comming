<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daan.dao.auth.UserDao">
	<!-- 分页查询，查出总条数 -->
	<select id="queryCountByUser" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			auth_users u
		<include refid="queryUserCondition"></include>
	</select>
     
    <!-- 分页查询LIST  -->
	<select id="queryPageListByUser" parameterType="com.daan.utils.DataGrid" resultType="com.daan.domain.Users" >
		SELECT  
			u.id AS idString,
			u.user_no AS userNo,
			u.user_name AS userName,
			u.memo AS memo,
			u.status AS status,
			u.display_order AS displayOrder
		FROM auth_users u
		<include refid="queryUserCondition"></include>
		LIMIT #{queryDto.startIndex},#{queryDto.pageSize}
	</select>
	
	<!-- 根据id查询用户信息  -->
	<select id="findByUserId" parameterType="java.lang.String" resultType="com.daan.domain.Users" >
		SELECT  
			u.id AS id,
			u.user_no AS userNo,
			u.user_name AS userName,
			u.memo AS memo,
			u.status AS status,
			u.display_order AS displayOrder
		FROM auth_users u
		WHERE u.id = #{id}
	</select>
	
	<!-- 根据用户名查询用户信息  -->
	<select id="findByUserName" parameterType="java.lang.String" resultType="com.daan.domain.Users" >
		SELECT  
			u.id AS id,
			u.user_no AS userNo,
			u.user_name AS userName,
			u.memo AS memo,
			u.status AS status,
			u.display_order AS displayOrder
		FROM auth_users u
		WHERE u.user_name = #{userName}
	</select>
	
	<!-- 根据账号查询用户信息  -->
	<select id="findByUserNo" parameterType="java.lang.String" resultType="com.daan.domain.Users" >
		SELECT  
			u.id AS id,
			u.user_no AS userNo,
			u.user_name AS userName,
			u.memo AS memo,
			u.status AS status,
			u.display_order AS displayOrder
		FROM auth_users u
		WHERE u.user_no = #{userNo}
	</select>
	
	<!-- 搜索查询拼接条件 -->
	<sql id="queryUserCondition">
		<where> 
			<if test="queryDto.searchStatus != -1 and queryDto.searchStatus != ''">
				u.status = #{queryDto.searchStatus}
			</if>
			<if test="queryDto.searchStr != null and queryDto.searchStr != ''">
				AND (
					u.user_no LIKE CONCAT('%',#{queryDto.searchStr},'%') 
					OR u.user_name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				)
			</if>
		</where>
			<if test="queryDto.searchSort != null and queryDto.searchSort != ''">
				<if test="queryDto.searchSort == 0">
					ORDER BY u.display_order
				</if>
				<if test="queryDto.searchSort == 1">
					ORDER BY CONVERT(u.user_name USING gbk) COLLATE gbk_chinese_ci
				</if>
				<if test="queryDto.searchSort == 2">
					ORDER BY u.id desc
				</if>
			</if>  
	</sql>
	
	<!-- 添加用户 -->
	<insert id="insertUsers" parameterType="com.daan.domain.Users">
		insert into auth_users 
		(
			`id`, 
			`user_no`, 
			`user_name`, 
			`mobile`, 
			`email`, 
			`password`, 
			`status`, 
			`memo`, 
			`display_order`, 
			`time_version`
		) 
		VALUES
			(#{id}, #{userNo}, #{userName}, #{mobile}, #{email}, #{password}, #{status}, #{memo}, #{displayOrder}, NOW())
	</insert>
	
	
	
	<!-- 修改用户信息  -->
	<delete id="updateUsers" parameterType="com.daan.domain.Users">
		UPDATE auth_users
			SET
			user_no=#{userNo},
			user_name=#{userName}, 
			display_order=#{displayOrder},
			memo=#{memo}, 
			time_version = NOW()  
		WHERE id=#{id}
	</delete>
	
	<!-- 重置密码  -->
	<delete id="updateUserPwd" parameterType="Map">
		UPDATE auth_users
			SET
			password=#{password},
			time_version = NOW() 
		WHERE id=#{id}
	</delete>
	
	<!-- 启用或者停用状态 -->
	<update id="updateUserStatus" parameterType="Map">
		UPDATE auth_users
		SET 
		<if test="status == 0">
			status = 1,  
		</if>
		<if test="status == 1">
			status = 0,  
		</if>        		
			time_version = NOW()      
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户信息  -->
	<delete id="deleteUserById" parameterType="java.lang.String" >
		DELETE FROM
			auth_users
		WHERE id=#{id}
	</delete>
	
	<select id="findByUserNameAndPwd" parameterType="Map" resultType="com.daan.domain.User" >
         SELECT
			user.user_name AS userName,
			user.password,
			user.id,
			user.user_no,
			user.mobile,
			user.email,
			user.is_first_signin,
			user.status,
			user.memo,
			user.time_version
		FROM
			auth_users AS USER
		WHERE 
		user.user_name = #{userName}
		AND user.password = #{pwd}
     </select>
     
     <!-- 修改用户默认登录机构和系统 -->
	<update id="updateUserSysAndOrg"  parameterType="Map">
		UPDATE user_profiles
			SET      		
			property_value = #{property_value} 
		WHERE
			user_id = #{user_id} 
			AND property_name = #{property_name} 
	</update>
	
	<!-- 修改或设置用户密码 -->
	<update id="updatePassword"  parameterType="Map">
		UPDATE auth_users
			SET      		
			PASSWORD = #{newPassword} 
		WHERE
			user_name = #{userName}  
	</update>
</mapper>
