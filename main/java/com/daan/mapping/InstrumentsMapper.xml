<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daan.dao.InstrumentsDao">

	<!-- 搜索查询拼接条件  AND org.org_id = #{queryDto.orgId} -->
	<sql id="queryCondition">
		WHERE 1 = 1
		<if test="queryDto.orgsId != null and queryDto.orgsId != ''">
			AND ins.org_id = #{queryDto.orgsId}
		</if>
		
		<if test="queryDto.searchStr != null and queryDto.searchStr != ''">
			AND (
				ins.code_no LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR ins.name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR ins.model LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR inp.front_class_name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR inp.class_name LIKE CONCAT('%',#{queryDto.searchStr},'%')  
				OR ins.producer LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR ins.fast_code LIKE CONCAT('%',#{queryDto.searchStr},'%')  
				)
		</if>
		<if test="queryDto.frontClassName != null and queryDto.frontClassName != ''">
			<if test="queryDto.frontClassName == 0">
				AND (inp.front_class_name is not null AND inp.front_class_name != '')
			</if>
			<if test="queryDto.frontClassName == 1">
				AND (inp.front_class_name is null OR inp.front_class_name = '')
			</if>
		</if>
		 <if test="queryDto.status != null and queryDto.status != ''">
			AND ins.status = #{queryDto.status}
		</if>
		<if test="queryDto.sort != null and queryDto.sort != ''">
			<if test="queryDto.sort == 0">
				ORDER BY ins.display_order
			</if>
			<if test="queryDto.sort == 1">
				ORDER BY CONVERT(ins.name USING gbk) COLLATE gbk_chinese_ci
			</if>
			<if test="queryDto.sort == 2">
				ORDER BY ins.id desc
			</if>
		</if>
	</sql>
		
	<!-- 分页查询LIST  -->
	<select id="queryPageListByConditions" parameterType="com.daan.dto.InstrumentsDto" resultType="com.daan.domain.Instruments" >
		SELECT
		ins.id AS id,
		ins.code_no AS codeNo,
		ins.name AS name,
		ins.model AS model,
		ins.report_header AS reportHeader,
		ret.name AS rptTemplatenName,
		ret2.name AS rptTemplate2Name,
		ins.type_id AS typeId,
		ins.display_order AS displayOrder,
		ins.fast_code AS fastCode,
		ins.status AS status
		FROM instruments ins
		LEFT JOIN report_templates ret ON ins.rpt_template_id = ret.id
		LEFT JOIN report_templates ret2 ON ins.rpt_template2_id = ret2.id
		INNER JOIN instr_params inp ON ins.id = inp.instrument_id
		LEFT JOIN orgs org ON ins.org_id = org.id
		<include refid="queryCondition"></include>
		${page.mysqlQueryCondition}
	</select>

	<!-- 分页查询，查出总条数 -->
	<select id="queryCountByInstruments" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			instruments ins
		LEFT JOIN report_templates ret ON ins.rpt_template_id = ret.id
		LEFT JOIN report_templates ret2 ON ins.rpt_template_id = ret2.id
		LEFT JOIN instr_params inp ON ins.id = inp.instrument_id
		LEFT JOIN orgs org ON ins.org_id = org.id
		<include refid="queryCondition"></include>
	</select>
	
	<!-- 根据id查询Object  -->
	<select id="findById" parameterType="java.lang.String" resultType="com.daan.domain.Instruments" >
		SELECT
		ins.id AS id,
		ins.app_id AS appId,
		ins.org_id AS orgId,
		ins.code_no AS codeNo,
		ins.name AS name,
		ins.model AS model,
		ins.report_header AS reportHeader,
		ret.name AS rptTemplatenName,
		ret2.name AS rptTemplate2Name,
		ret.id AS rptTemplateId,
		ret2.id AS rptTemplate2Id,
		ins.type_id AS typeId,
		ins.status AS status,
		ins.display_order AS displayOrder,
		ins.fast_code AS fastCode,
		ins.model AS model,
		ins.producer AS producer,
		ins.lab_group_id AS labGroupId,
		ins.sample_type_id AS sampleTypeId,
		ins.purchase_date AS purchaseDate,
		ins.provider AS provider, 
		ins.install_date AS installDate, 
		ins.maintainer AS maintainer, 
		ins.maintain_tel AS maintainTel
		FROM instruments ins
		LEFT JOIN report_templates ret ON ins.rpt_template_id = ret.id
		LEFT JOIN report_templates ret2 ON ins.rpt_template2_id = ret2.id
		LEFT JOIN instr_params inp ON ins.id = inp.instrument_id
		LEFT JOIN orgs org ON ins.org_id = org.id
		WHERE 1=1 
			AND ins.id=#{id}
	</select>
	
	<!-- 根据id查询仪器通讯参数Object  -->
	<select id="findParamsById" parameterType="java.lang.String" resultType="com.daan.domain.InstrParams" >
		SELECT
			ip.instrument_id AS instrumentId,
			ip.app_id AS appId,
			ip.org_id AS orgId,
			ip.box_barcode AS boxBarcode,
			ip.front_class_name AS frontClassName,
			ip.class_name AS className,
			ip.com_port AS comPort,
			ip.protocol AS protocol,
			ip.baud_rate AS baudRate,
			ip.data_bit AS dataBit,
			ip.stop_bit AS stopBit,
			ip.parity_bit AS parityBit,
			ip.end_code AS endCode, 
			ip.is_respond AS isRespond,
			ip.respond_code AS respondCode, 
			ip.responding_code AS respondingCode, 
			ip.server_ip AS serverIp, 
			ip.port AS PORT, 
			ip.interval AS intervals, 
			ip.virutal_instr_id AS virutalInstrId, 
			ip.virutal_type AS virutalType,
			ip.is_dtr AS isDtr, 
			ip.is_rts AS isRts 
		FROM
			instr_params ip
		WHERE 1=1 
			AND ip.instrument_id=#{instrumentId}
	</select>
	
	<!-- 根据名称查询Object  -->
	<select id="findByName" parameterType="java.lang.String" resultType="com.daan.domain.Instruments" >
		SELECT
		ins.id AS id,
		ins.code_no AS codeNo,
		ins.name AS name,
		ins.model AS model,
		ins.report_header AS reportHeader,
		ret.name AS rptTemplatenName,
		ret2.name AS rptTemplate2Name,
		ret.id AS rptTemplateId,
		ret2.id AS rptTemplate2Id,
		ins.type_id AS typeId,
		ins.status AS status
		FROM instruments ins
		LEFT JOIN report_templates ret ON ins.rpt_template_id = ret.id
		LEFT JOIN report_templates ret2 ON ins.rpt_template2_id = ret2.id
		LEFT JOIN instr_params inp ON ins.id = inp.instrument_id
		LEFT JOIN orgs org ON ins.org_id = org.id
		WHERE 1=1 
			AND ins.name=#{name}
	</select>
	
	<!-- 查询所有报告模版LIST  -->
	<select id="getAllReportTemplates" parameterType="java.lang.String" resultType="com.daan.domain.CtrReportTemplates" >
		SELECT
			t.id AS id,
			t.name AS name
		FROM
			report_templates t
	</select>
	
	<!-- 查询仪器对应项目LIST  -->
	<select id="getInstrItemsListById" parameterType="java.lang.String" resultType="com.daan.domain.InstrItems" >
		SELECT  
		ii.id AS id,
		ii.instrument_id AS instrumentId,
		cti.code_no AS codeNo,
		cti.name AS NAME,
		cti.en_short_name AS enShortName,
		ii.channel_code AS channelCode,
		ii.unit AS unit,
		cdc.name AS sampleTypeName,
		ip.front_class_name AS frontClassName,
		ip.class_name AS className
		FROM instruments ins
		INNER JOIN instr_params ip  ON ins.id = ip.instrument_id
		LEFT JOIN instr_items ii ON ins.id = ii.instrument_id
		LEFT JOIN test_items cti ON ii.test_item_id = cti.id  
		LEFT JOIN ctr_dict_codes cdc ON cti.sample_type_id = cdc.id
		WHERE ins.id = #{instrumentId}
	</select>
	
	<!-- 查询仪器对应细菌或抗生素LIST  -->
	<select id="getInstrMicsListById" parameterType="com.daan.dto.InstrumentsDto" resultType="com.daan.domain.InstrItems" >
		SELECT 
			mi.code_no AS codeNo,
			mi.name AS NAME,
			im.channel_code AS channelCode
			FROM instruments ins
			LEFT JOIN instr_mics im ON ins.id = im.instrument_id
			LEFT JOIN mic_items mi ON im.mic_item_id = mi.id
			WHERE im.instrument_id = #{queryDto.instrumentId} AND im.item_type_id=#{queryDto.itemTypeId}
	</select>
	
	<!-- 查询所有盒子条码LIST  -->
	<select id="getAllInstrBoxsList" parameterType="java.lang.String" resultType="com.daan.domain.InstrParams" >
		SELECT
			t.id AS id,
			t.box_barcode AS boxBarcode
		FROM
			instr_boxs t
	</select>
	
	<!-- 查询虚拟仪器LIST  -->
	<select id="getAllInstrumentsList" parameterType="java.lang.String" resultType="com.daan.domain.Instruments" >
		SELECT 
			inst.id AS id, 
			inst.name AS name 
		FROM
			instruments inst
		WHERE inst.status = 1
	</select>
	
	<!-- 新增客户仪器信息  -->
	<insert id="insertInstruments" parameterType="com.daan.domain.Instruments" keyProperty="id">
		INSERT INTO instruments (
			id, 
			app_id, 
			org_id, 
			code_no, 
			name, 
			producer, 
			model, 
			fast_code, 
			lab_group_id, 
			sample_type_id, 
			rpt_template_id, 
			rpt_template2_id, 
			display_order, 
			type_id, 
			status, 
			report_header, 
			purchase_date, 
			provider, 
			install_date, 
			maintainer, 
			maintain_tel, 
			time_version
		)
		VALUES
			(
				#{id},              
				#{appId},          
				#{orgId},            
				#{codeNo},     
				#{name},           
				#{producer},    
				#{model},    
				#{fastCode},    
				#{labGroupId},    
				#{sampleTypeId},   
				#{rptTemplateId},  
				#{rptTemplate2Id},
				#{displayOrder}, 
				#{typeId}, 
				#{status}, 
				#{reportHeader}, 
				NOW(), 
				#{provider}, 
				NOW(), 
				#{maintainer}, 
				#{maintainTel},           
				NOW()     
			)
	</insert>
	
	<!-- 新增仪器通讯参参数  -->
	<insert id="insertInstrParams" parameterType="com.daan.domain.InstrParams" keyProperty="id">
		INSERT INTO instr_params (
			app_id,
			org_id,
			instrument_id,
			time_version
		)
		VALUES
		(	
			#{appId}, 
			#{orgId}, 
			#{instrumentId},        
			NOW()     
		)
	</insert>
	
	<!-- 复制添加仪器通讯参参数  -->
	<insert id="insertInstrAllParams" parameterType="com.daan.domain.InstrParams" keyProperty="id">
		INSERT INTO instr_params  (
			app_id,
			org_id,
			instrument_id,
			front_class_name,
			class_name,
			com_port,
			protocol,
			data_bit,
			baud_rate,
			stop_bit,
			parity_bit,
			is_respond,
			end_code,
			respond_code,
			responding_code,
			is_dtr,
			`interval`,
			is_rts,
			server_ip,
			port,
			virutal_instr_id,
			virutal_type,
			time_version,
			box_barcode      
		)
		VALUES
		(	
			#{appId},
			#{orgId},
			#{instrumentId},
			#{frontClassName},
			#{className},
			#{comPort},
			#{protocol},
			#{dataBit},
			#{baudRate},
			#{stopBit},
			#{parityBit},
			#{isRespond},
			#{endCode},
			#{respondCode},
			#{respondingCode},
			#{isDtr},
			#{intervals},
			#{isRts},
			#{serverIp},
			#{port},
			#{virutalInstrId},
			#{virutalType},
			NOW(),
			#{boxBarcode}   
		)
	</insert>
	
	<!-- 根据id查询仪器仪器关联项目Object  -->
	<select id="findInstrItemsById" parameterType="java.lang.String" resultType="com.daan.domain.InstrItems" >
		SELECT
			`id`  AS      		id,           
			`app_id`  AS        appId,        
			`org_id`  AS        orgId,        
			`instrument_id`  AS instrumentId, 
			`test_item_id`  AS  testItemId,   
			`channel_code`  AS  channelCode,  
			`factor`  AS        factor,       
			`unit`  AS          unit,         
			`print_order`  AS   printOrder, 
			`time_version`      timeVersion
		FROM
			instr_items ii
		WHERE 1=1 
			AND ii.instrument_id=#{instrumentId} 
	</select>
	
	<!-- 复制添加仪器关联项目  -->
	<insert id="insertInstrAllItems" parameterType="com.daan.domain.InstrItems" keyProperty="id">
		INSERT INTO instr_items  (
			`id`, 
			`app_id`, 
			`org_id`, 
			`instrument_id`, 
			`test_item_id`, 
			`channel_code`, 
			`factor`, 
			`unit`, 
			`print_order`, 
			`time_version`
		)
		VALUES
		(	
			#{id},          
			#{appId},       
			#{orgId},       
			#{instrumentId},
			#{testItemId},  
			#{channelCode}, 
			#{factor},      
			#{unit},        
			#{printOrder},   
			NOW()
		)
	</insert>
	
	<!-- 根据id查询微生物的细菌、抗生素仪器通道Object  -->
	<select id="findInstrMicsById" parameterType="java.lang.String" resultType="com.daan.domain.InstrMics" >
		SELECT
			`id` AS 				id,  		 
			`app_id` AS             appId,  	  	
			`org_id` AS             orgId,  	  	
			`instrument_id` AS      instrumentId, 
			`item_type_id` AS       itemTypeId,   
			`channel_code` AS       channelCode,  
			`mic_item_id` AS        micItemId,    
			`print_order` AS        printOrder,   
			`time_version` AS       timeVersion
		FROM
			instr_mics im
		WHERE 1=1 
			AND im.instrument_id=#{instrumentId} 
	</select>
	
	<!-- 复制添加微生物的细菌、抗生素仪器通道  -->
	<insert id="insertInstrAllMics" parameterType="com.daan.domain.InstrMics" keyProperty="id">
		INSERT INTO instr_mics  (
			`id`, 
			`app_id`, 
			`org_id`, 
			`instrument_id`, 
			`item_type_id`, 
			`channel_code`, 
			`mic_item_id`, 
			`print_order`, 
			`time_version`
		)
		VALUES
		(	
			#{id},  		 
			#{appId},  	  	
			#{orgId},  	  	
			#{instrumentId}, 
			#{itemTypeId},   
			#{channelCode},  
			#{micItemId},    
			#{printOrder},   
			NOW()
		)
	</insert>
	
	<!-- 根据id查询本地仪器常规项目参考值对应Object  -->
	<select id="findInstrRefrangesById" parameterType="java.lang.String" resultType="com.daan.domain.InstrRefranges" >
		SELECT
			`id` AS 			id,			
			`app_id` AS        	appId,		
			`org_id` AS        	orgId,		
			`instrument_id` AS 	instrumentId,
			`test_item_id` AS  	testItemId,	
			`sample_type_id` AS	sampleTypeId,
			`sex_id` AS        	sexId,		
			`age_unit_id` AS   	ageUnitId,	
			`age_min` AS       	ageMin,		
			`age_max` AS       	ageMax,		
			`calc_age_min` AS  	calcAgeMin,	
			`calc_age_max` AS  	calcAgeMax,	
			`ref_low` AS       	refLow,		
			`ref_high` AS      	refHigh,		
			`panic_low` AS     	panicLow,	
			`panic_high` AS    	panicHigh,	
			`alarm_low` AS     	alarmLow,	
			`alarm_high` AS    	alarmHigh,	
			`ref_text` AS      	refText,		
			`ref_remark` AS    	refRemark,	
			`en_ref_remark` AS 	enRefRemark,	
			`en_ref_text` AS   	enRefText,	
			`time_version` AS  	timeVersion
		FROM
			instr_refranges iref
		WHERE 1=1 
			AND iref.instrument_id=#{instrumentId} 
	</select>
	
	<!-- 复制添加本地仪器常规项目参考值对应  -->
	<insert id="insertIRefranges" parameterType="com.daan.domain.InstrRefranges" keyProperty="id">
		INSERT INTO instr_refranges  (
			`id`, 
			`app_id`, 
			`org_id`, 
			`instrument_id`, 
			`test_item_id`, 
			`sample_type_id`, 
			`sex_id`, 
			`age_unit_id`, 
			`age_min`, 
			`age_max`, 
			`calc_age_min`, 
			`calc_age_max`, 
			`ref_low`, 
			`ref_high`, 
			`panic_low`, 
			`panic_high`, 
			`alarm_low`, 
			`alarm_high`, 
			`ref_text`, 
			`ref_remark`, 
			`en_ref_remark`, 
			`en_ref_text`, 
			`time_version`
		)
		VALUES
		(	
			#{id},			
			#{appId},		
			#{orgId},		
			#{instrumentId},
			#{testItemId},	
			#{sampleTypeId},
			#{sexId},		
			#{ageUnitId},	
			#{ageMin},		
			#{ageMax},		
			#{calcAgeMin},	
			#{calcAgeMax},	
			#{refLow},		
			#{refHigh},		
			#{panicLow},	
			#{panicHigh},	
			#{alarmLow},	
			#{alarmHigh},	
			#{refText},		
			#{refRemark},	
			#{enRefRemark},	
			#{enRefText},	
			NOW()
		)
	</insert>
	
	<!-- 修改客户仪器信息  -->
	<update id="updateInstruments" parameterType="com.daan.domain.Instruments">	
		UPDATE instruments
		SET name = #{name},
			model = #{model},
			type_id = #{typeId},
			report_header = #{reportHeader},
			rpt_template_id = #{rptTemplateId},
			rpt_template2_id = #{rptTemplate2Id},
			display_order = #{displayOrder},
			fast_code = #{fastCode},
			time_version = NOW()
		WHERE 1=1 
			AND id = #{id}
	</update>
	
	<!-- 修改仪器通讯参数  -->
	<update id="updateInstrumentsParams" parameterType="com.daan.domain.InstrParams">
		UPDATE instr_params ip
		SET ip.box_barcode = #{boxBarcode},
			ip.front_class_name = #{frontClassName},
			ip.class_name = #{className},
			ip.com_port = #{comPort},
			ip.protocol = #{protocol},
			ip.baud_rate = #{baudRate},
			ip.data_bit = #{dataBit},
			ip.stop_bit = #{stopBit},
			ip.parity_bit = #{parityBit},
			ip.end_code = #{endCode}, 
			ip.is_respond = #{isRespond},
			ip.respond_code = #{respondCode}, 
			ip.responding_code = #{respondingCode}, 
			ip.server_ip = #{serverIp}, 
			ip.port = #{port}, 
			ip.interval = #{intervals}, 
			ip.virutal_instr_id = #{virutalInstrId}, 
			ip.virutal_type = #{virutalType},
			ip.is_dtr = #{isDtr}, 
			ip.is_rts = #{isRts},
			ip.time_version = NOW()
		WHERE 1=1 
			AND instrument_id = #{instrumentId}
	</update>
	
	<!-- 启用客户仪器信息  -->
	<update id="enableById" parameterType="java.lang.String" >
		UPDATE instruments
		SET status = 1,          		
			time_version = NOW()      
		WHERE 1=1 
			AND id = #{id}
	</update>

	<!-- 停用客户仪器信息  -->
	<update id="disableById" parameterType="java.lang.String" >
		UPDATE instruments
		SET status = 0,          		
			time_version = NOW()      
		WHERE 1=1 
			AND id = #{id}
	</update>
	
	<!-- 删除客户仪器信息  -->
	<delete id="deleteById" parameterType="java.lang.String" >
		DELETE FROM
			instruments
		WHERE 1=1 
			AND id=#{id}
	</delete>
	
	<!-- 删除仪器参数信息  -->
	<delete id="deleteParamsById" parameterType="java.lang.String" >
		DELETE FROM
			instr_params
		WHERE 1=1 
			AND instrument_id=#{id}
	</delete>
	
	<!-- 删除仪器关联项目信息  -->
	<delete id="deleteInstrItemsById" parameterType="java.lang.String" >
		DELETE FROM
			instr_items
		WHERE 1=1 
			AND instrument_id=#{id}
	</delete>
	
	<!-- 删除微生物的细菌、抗生素仪器通道信息  -->
	<delete id="deleteInstrMicsById" parameterType="java.lang.String" >
		DELETE FROM
			instr_mics
		WHERE 1=1 
			AND instrument_id=#{id}
	</delete>
	
	<!-- 删除本地仪器常规项目参考值对应信息  -->
	<delete id="delInstrRefrangesById" parameterType="java.lang.String" >
		DELETE FROM
			instr_refranges
		WHERE 1=1 
			AND instrument_id=#{id}
	</delete>
	
	<!-- 搜索查询拼接条件  -->
	<sql id="queryConditionOrgs">
		WHERE 1 = 1
		<if test="queryDto.searchStr != null and queryDto.searchStr != ''">
			AND (
				org.code_no LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR org.name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR org.short_name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR org.en_name LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR org.en_short_name LIKE CONCAT('%',#{queryDto.searchStr},'%')  
				OR org.fast_code LIKE CONCAT('%',#{queryDto.searchStr},'%') 
				OR regs.name LIKE CONCAT('%',#{queryDto.searchStr},'%')  
				)
		</if>
	</sql>	
	
	<!-- 分页查询，查出机构单位总条数 -->
	<select id="queryCountByIOrgs" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			orgs org
			LEFT JOIN regions regs ON org.region_id = regs.id
		<include refid="queryConditionOrgs"></include>
	</select>
	
	<!-- 分页查询，查出机构单位列表 -->
	<select id="queryListByIOrgs" parameterType="com.daan.dto.OrgsDto" resultType="com.daan.domain.Orgs" >
			SELECT 
			org.id AS id,
			org.code_no AS codeNo,
			org.name AS NAME,
			regs.name AS regionName
			FROM orgs org
			LEFT JOIN regions regs ON org.region_id = regs.id
			<include refid="queryConditionOrgs"></include>
	</select>
	
	<!-- 根据id查询机构单位  -->
	<select id="findIOrgsById" parameterType="java.lang.String" resultType="com.daan.domain.Orgs" >
		SELECT
			org.id AS id,
			org.name AS name
			FROM orgs org
		WHERE 1=1 
			AND org.id=#{id}
	</select>
	
	<!-- 修改信息 -->
	<update id="modifyInstruments" parameterType="com.daan.domain.Orgs">
		UPDATE instruments
		SET status = #{status},          		
			time_version = NOW()      
		WHERE 1=1 
			AND id = #{id}
	</update>
</mapper>
